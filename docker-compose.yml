version: "3.9"

services:
  postgres:
    env_file:
      - .env
    container_name: inkme-dev-postgres
    hostname: postgres
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5438:5432"
    restart: on-failure
    volumes:
      - ./.data/docker-postgres:/var/lib/postgresql/data
    networks:
      - ink-me
  redis:
    env_file:
      - .env
    container_name: inkme-dev-redis
    hostname: redis
    image: redis:latest
    command: redis-server --port 6382
    ports:
      - "6382:6382"
    expose:
      - "6382"
    volumes:
      - ./.data/docker-redis:/var/lib/redis/data
    networks:
      - ink-me

#  app-dev:
#    env_file:
#      - .env.compose
#    platform: linux/amd64
#    container_name: "skyvisor-insight-dev"
#    image: "skyvisor-insight-dev"
#    build:
#      dockerfile: Dockerfile
#      target: app-dev
#      context: ./
#    ports:
#      - "6969:6969"
#    volumes:
#      - ./:/app
#    #    environment:
#    #      APP_ENV: development
#
#    networks:
#      - aviation-client




  #  release-stage:
  #    platform: linux/amd64
  #    container_name: "a11199/skyvisor-insight:latest"
  #    build:
  #      dockerfile: Dockerfile
  #      target: release-stage
  #      context: ./
  #    ports:
  #      - "6969:6969"
  #    volumes:
  #      - ./:/app
  #    networks:
  #      - aviation-client
#  debug:
#    env_file:
#      - .env.compose
#    platform: linux/amd64
#    container_name: "skyvisor-insight-debug"
#    image: "skyvisor-insight-debug"
#    build:
#      dockerfile: Dockerfile
#      context: ./
#      target: app-debug
#    security_opt:
#      - seccomp:unconfined
#    cap_add:
#      - SYS_PTRACE
#    ports:
#      - "2345:2345"
#    volumes:
#      - ./:/app
#    command: "dlv --listen=:2345 --headless=true --log=true --log-output=debugger,debuglineerr,gdbwire,lldbout,rpc --accept-multiclient --api-version=2 exec ./entrypoint"
#    networks:
#      - aviation-client


#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    image: rediscommander/redis-commander:latest
#    platform: linux/amd64
#    environment:
#      - REDIS_HOSTS=local:redis:6380
#      - HTTP_USER=root
#      - HTTP_PASSWORD=qwerty
#    ports:
#      - "8082:8081"
#    expose:
#      - "8082"
#    networks:
#      - aviation-client
#    depends_on:
#      - redis
#
#  pgweb:
#    container_name: pgweb  # optional
#    restart: always  # optional
#    image: sosedoff/pgweb
#    ports:
#      - "8081:8081"
#    links:
#      - postgres:postgres  # my database container is called postgres, not db
#    depends_on:
#      - postgres
#    environment: &env
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASS}
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_HOST_AUTH_METHOD: trust


#  server:
#    build: .
#    networks:
#      - gollama-assistant
#    depends_on:
#      - postgres
#      - redis
#    environment:
#      LOG_FORMAT: json
#      DB_HOST: postgres
#      REDIS_HOST: redis
#      ADDR: "0.0.0.0:6969"
#    ports:
#      - 6969:6969

networks:
  ink-me:
